@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@using blazor.models
@using blazor.services
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="home-container">
    <Navbar />
    <div class="main">
        @if (@CurrentUser is not null)
        {
            <div>
                <span>@CurrentUser.Id</span>
            </div>
            <div>
                <span>@CurrentUser.Email</span>
            </div>
        }
    </div>

</div>

@code {
    User? CurrentUser { get; set; } = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (CurrentUser is not null) { return; }
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity is null || !user.Identity.IsAuthenticated) { return; }

        int.TryParse(user.FindFirst("Id")?.Value, out int id);
        CurrentUser = new(id, user.FindFirst("email")?.Value ?? "");

        StateHasChanged();
    }
}