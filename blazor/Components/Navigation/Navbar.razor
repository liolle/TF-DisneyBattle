@using Microsoft.AspNetCore.Components.Authorization
@using blazor.models
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer
<div class="navbar-container">
    <div class="navbar-container-l2">
        <div class="navbar-left"></div>
        <div class="navbar-center"></div>
        <div class="navbar-right">
            @if (@CurrentUser is not null)
            {
                <button @onclick="@Logout">Logout</button>
            }
            else
            {
                <button @onclick="@Login">Login</button>
            }
        </div>

    </div>
</div>

@code {
    User? CurrentUser { get; set; } = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            if (user.Identity is null || !user.Identity.IsAuthenticated) { return; }

            int.TryParse(user.FindFirst("Id")?.Value, out int id);
            CurrentUser = new(id, user.FindFirst("email")?.Value ?? "");
            StateHasChanged();
        }
    }
}